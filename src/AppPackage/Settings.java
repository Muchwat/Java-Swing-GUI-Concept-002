/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import javax.swing.ImageIcon;
import com.fazecast.jSerialComm.SerialPort;
import java.util.Scanner;

/**
 *
 * @author Muchwat
 */
public final class Settings extends javax.swing.JFrame {
    

    SettingsConfig set = new SettingsConfig();
    static SerialPort chosenPort;
    public Settings() {
        initComponents();
        portList();
        
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        settings = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        connect = new javax.swing.JLabel();
        select = new javax.swing.JComboBox<>();
        connectbtn = new javax.swing.JButton();
        rmtemp = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        alarm = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        Container = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/menubtn.png"))); // NOI18N
        menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });
        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/min.png"))); // NOI18N
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minMouseExited(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(937, 5, -1, -1));

        settings.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        settings.setForeground(new java.awt.Color(255, 255, 255));
        settings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settings.setText("Settings");
        getContentPane().add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 27, 1000, 29));

        exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/cancel.png"))); // NOI18N
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(974, 5, -1, -1));

        connect.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        connect.setForeground(new java.awt.Color(255, 255, 255));
        connect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        connect.setText("Connect        :");
        getContentPane().add(connect, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        select.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        select.setFocusable(false);
        getContentPane().add(select, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 120, -1));

        connectbtn.setText("Connect");
        connectbtn.setBorder(null);
        connectbtn.setBorderPainted(false);
        connectbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        connectbtn.setFocusable(false);
        connectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectbtnActionPerformed(evt);
            }
        });
        getContentPane().add(connectbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 120, 20));

        rmtemp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rmtemp.setForeground(new java.awt.Color(255, 255, 255));
        rmtemp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rmtemp.setText("Critical Temp :");
        getContentPane().add(rmtemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, -1, -1));
        rmtemp.getAccessibleContext().setAccessibleName("Critical Temp  :");

        jSlider1.setMajorTickSpacing(5);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.setFocusable(false);
        jSlider1.setRequestFocusEnabled(false);
        getContentPane().add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 490, -1));

        alarm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        alarm.setForeground(new java.awt.Color(255, 255, 255));
        alarm.setText("Room Temp  :");
        getContentPane().add(alarm, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));

        jSlider2.setMajorTickSpacing(5);
        jSlider2.setMinorTickSpacing(1);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setSnapToTicks(true);
        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider2.setFocusable(false);
        getContentPane().add(jSlider2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 490, -1));

        Container.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Container.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/active.png"))); // NOI18N
        getContentPane().add(Container, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void portList(){
       SerialPort[] portName = SerialPort.getCommPorts();
        for (SerialPort portName1 : portName) {
            select.addItem(portName1.getSystemPortName());
        }
        
    }
    
    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/cancelf.png"));
       exit.setIcon(f);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/cancel.png"));
        exit.setIcon(f);
    }//GEN-LAST:event_exitMouseExited

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void minMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseEntered
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/minf.png"));
       min.setIcon(f);
    }//GEN-LAST:event_minMouseEntered

    private void minMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseExited
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/min.png"));
       min.setIcon(f);
    }//GEN-LAST:event_minMouseExited

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        this.setState(Settings.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void menuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseEntered
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/menu-btn.png"));
        menu.setIcon(f);
    }//GEN-LAST:event_menuMouseEntered

    private void menuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseExited
       ImageIcon f = new ImageIcon(getClass().getResource("/AppPackage/menubtn.png"));
        menu.setIcon(f);
    }//GEN-LAST:event_menuMouseExited

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
       new Mainclass().setVisible(true);
       this.dispose();
    }//GEN-LAST:event_menuMouseClicked

    private void connectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectbtnActionPerformed
     
        saveConnections(); 
       
        
        if(connectbtn.getText().equals("connect")){
          //Attemp connection
          final SerialPort chosenPort = SerialPort.getCommPort(set.getConnection("USBPORT"));
          chosenPort.setComPortTimeouts(SerialPort.TIMEOUT_READ_SEMI_BLOCKING,0,0);
          if(chosenPort.openPort()){
              connectbtn.setText("Disconnect");
              select.setEnabled(false);
          }
          //Thread to get n sens data to the graph
          Thread thread = new Thread(){
          @Override public void run(){
              Scanner scanner = new Scanner(chosenPort.getInputStream());
              while(scanner.hasNextLine()){
                System.out.println(scanner.nextLine());
                 
              }
              scanner.close();
          }
          };
          thread.start();
          
      }else{
          //Terminate connection
          chosenPort.closePort();
          select.setEnabled(true);
          connectbtn.setText("Connect");
          
      }
    }//GEN-LAST:event_connectbtnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed
    public void saveConnections(){
     String tittle = "USBPORT";   
     String comPort = select.getSelectedItem().toString();
     set.saveConnection(tittle, comPort);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Container;
    private javax.swing.JLabel alarm;
    private javax.swing.JLabel connect;
    private javax.swing.JButton connectbtn;
    private javax.swing.JLabel exit;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JLabel menu;
    private javax.swing.JLabel min;
    private javax.swing.JLabel rmtemp;
    private javax.swing.JComboBox<String> select;
    private javax.swing.JLabel settings;
    // End of variables declaration//GEN-END:variables
}
